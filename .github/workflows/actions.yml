# name: Publish LayGenerator

# on: push

# jobs:
#   build:
#     name: Build and Deploy
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/master'

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v3
#       with:
#         fetch-depth: 0

#     - name: Install .NET Core
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: 6.0.x

#     - name: Publish Project
#       run: dotnet publish "./src/LayGeneratorGUI/LayGeneratorGUI.csproj" --configuration Release --output ./Output --runtime win-x64 --self-contained

#     - name: Publish Artifacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: LayGenerator
#         path: ./Output

#     - name: Configure Service Connection
#       run: |
#         mkdir -p ~/.ssh/
#         echo "$SSH_KEY" > ~/.ssh/server.key
#         chmod 600 ~/.ssh/server.key
#         cat >>~/.ssh/config <<END
#         Host server
#           HostName $SSH_HOST
#           User $SSH_USER
#           IdentityFile ~/.ssh/server.key
#           StrictHostKeyChecking no
#         END
#       env:
#         SSH_USER: ${{ secrets.STAGING_SSH_USER }}
#         SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
#         SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}
  
#     - name: Ensure Upload Completed
#       run: sleep 5

#     - name: Download New Files
#       run: ssh server 'dotnet /home/ubuntu/DownloadGithubArtifact/DownloadGithubArtifact.dll LayGenerator /home/ubuntu/LayGenerator'

#     # - name: Move files to downloads
    
#     # - name: Discord new release alert
